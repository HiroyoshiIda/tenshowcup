<?php
// -----------------------------------------------------
//	DB 基底クラス.
// -----------------------------------------------------
class DBObject
{
	var	$link;		// 接続リソース.
	var	$res;		// 結果.
	var	$error;		// エラーメッセージ.
	
	// *****************************************************
	// コンストラクタ.
	// *****************************************************
	function DBObject()
	{
		
	}
	
	// *****************************************************
	// function db_connect( $hostname, $user_id, $passwd, $db_name, $encoding )
	// *****************************************************
	// 機  能：データベースに接続する.
	// 引  数：$hostname		:接続ホスト名.
	//	   $user_id		:接続ユーザ.
	//	   $passwd		:パスワード.
	//	   $db_name		:接続DB名.
	//	   $encoding		:使用する文字エンコーディング.
	// 戻り値：接続リソースID.
	// *****************************************************
	function connect( $hostname, $user_id, $passwd, $db_name, $encoding )
	{
		$this->link = mysql_connect( $hostname, $user_id, $passwd, TRUE );
		
		// リソース有無の確認.
		if( !is_resource( $this->link )) {
			return	NULL;
		}
		
		// 文字コード.
		if ( !mysql_query( "SET NAMES '{$encoding}'", $this->link )) {
			return	NULL;
		}
		
		// DBを選択.
		if( !mysql_select_db( $db_name )) {
			return	NULL;
		}
		
		return	$this->link;
	}
	
	// *****************************************************
	// function begin()
	// *****************************************************
	// 機  能：トランザクション開始.
	// 引  数：なし.
	// 戻り値：接続成功 true.
	//	   接続失敗 false.
	// *****************************************************
	function begin()
	{
		return	$this->query( "BEGIN" );
	}
	
	// *****************************************************
	// function query( $SQL )
	// *****************************************************
	// 機  能：SQLクエリー送信.
	// 引  数：$SQL SQL文.
	// 戻り値：接続成功 true.
	//	   接続失敗 false.
	// *****************************************************
	function query( $SQL )
	{
		$this->res = mysql_query( $SQL, $this->link );	// SQL文をクエリー送信.
		$this->get_error();				// エラーを取得.
		return	$this;
	}
	
	// *****************************************************
	// function fetch_array()
	// *****************************************************
	// 機  能：結果を連想配列&添字配列で返す.
	// 引  数：なし.
	// 戻り値：一行分のレコード.
	// *****************************************************
	function fetch_array()
	{
		return	mysql_fetch_array( $this->res );
	}
	
	// *****************************************************
	// function fetch_all()
	// *****************************************************
	// 機  能：結果を連想配列&添字配列で返す.
	// 引  数：なし.
	// 戻り値：全件分のレコード.
	// *****************************************************
	function fetch_all()
	{
		while ($row = mysql_fetch_array( $this->res )) {
			$ret[] = $row;
		}
		return	$ret;
	}
	
	// *****************************************************
	// function fetch_assoc()
	// *****************************************************
	// 機  能：結果を連想配列で返す.
	// 引  数：なし.
	// 戻り値：一行分のレコード.
	// *****************************************************
	function fetch_assoc()
	{
		return	mysql_fetch_assoc( $this->res );
	}
	
	// *****************************************************
	// function num_rows()
	// *****************************************************
	// 機  能：直近のクエリーで参照された行数を返す.
	// 引  数：なし.
	// 戻り値：直近のクエリーで参照された行数.
	// *****************************************************
	function num_rows()
	{
		return	mysql_num_rows( $this->res );
	}
	
	// *****************************************************
	// function affected_rows()
	// *****************************************************
	// 機  能：直近のクエリーで変更された行数を返す.
	// 引  数：なし.
	// 戻り値：直近のクエリーで変更された行数.
	// *****************************************************
	function affected_rows()
	{
		return	mysql_affected_rows( $this->link );
	}
	
	// *****************************************************
	// function insert_id()
	// *****************************************************
	// 機  能：直近のクエリーで生成されたauto_incrementIDを返す.
	// 引  数：なし.
	// 戻り値：直近のクエリーで生成されたID.
	// *****************************************************
	function insert_id()
	{
		return	mysql_insert_id( $this->link );
	}
	
	// *****************************************************
	// function commit()
	// *****************************************************
	// 機  能：コミット.
	// 引  数：なし.
	// 戻り値：成功:true 失敗:false.
	// *****************************************************
	function commit()
	{
		// コミット成功時.
		mysql_query( "COMMIT", $this->link );
		$this->get_error();
		
		// コミット成功時.
		if ( $this->error == '' ) {
			return TRUE;
		
		// エラー発生時.
		} else {
			return FALSE;
		}
	}
	
	// *****************************************************
	// function rollback()
	// *****************************************************
	// 機  能：ロールバック.
	// 引  数：なし.
	// 戻り値：なし.
	// *****************************************************
	function rollback()
	{
		mysql_query( "ROLLBACK", $this->link );
	}
	
	// *****************************************************
	// function get_error()
	// *****************************************************
	// 機  能：直近に実行されたエラーメッセージを取得.
	// 引  数：なし.
	// 戻り値：なし.
	// *****************************************************
	function get_error()
	{
		$this->error = mysql_error( $this->link );	// エラーコードを取得.
		// エラーが発生していたら.
		if ( $this->error != '' ) {
			// ロールバック.
			$this->rollback();
		}
	}
}
?>
